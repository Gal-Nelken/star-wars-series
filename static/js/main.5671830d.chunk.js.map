{"version":3,"sources":["services/custom-hooks.js","cmps/MoviesPrev.jsx","cmps/MoviesList.jsx","cmps/MovieDetails.jsx","cmps/Loader.jsx","cmps/SlideShow.jsx","services/async-storage-service.js","services/movie-service.js","App.jsx","reportWebVitals.js","index.js"],"names":["useCheckInArr","entity","arr","useState","isInArr","setIsFav","useEffect","id","_id","some","MoviesPrev","movie","onSetMovie","favMovies","isFav","className","onClick","properties","title","MoviesList","movies","rate","setRate","style","left","map","MovieDetails","onUpdateFavs","opening_crawl","release_date","director","split","reverse","join","Loader","txt","SlideShow","images","image","setImage","getNextImg","prevImage","idx","findIndex","img","length","imageInterval","setInterval","clearInterval","src","alt","asyncStorageService","post","put","remove","query","getEntities","entityType","a","entities","JSON","parse","localStorage","getItem","_save","Promise","resolve","newEntity","_makeId","push","fetch","res","json","data","result","console","error","updatedEntity","entityId","updatedEntitys","filter","setItem","stringify","text","possible","i","charAt","Math","floor","random","KEY1","KEY2","movieService","movieId","App","removeFav","addFav","queryFavs","setMovies","setFavMovies","updateFavs","updatedFavs","init","setMovie","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5671830d.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\n// A HOOK TO CHECK IF AN ENTITY EXIST IN ARRAY OF OBJECTS\r\n// GET THE ITEM AND THE ARRAY, RETURNS A BOOLEAN ANSWER\r\nexport const useCheckInArr = (entity, arr) => {\r\n\r\n    const [isInArr, setIsFav] = useState(false)\r\n\r\n    const checkArr = (id) => {\r\n        if (!id) return\r\n        setIsFav(arr.some(entity => entity._id === id))\r\n    }\r\n// CHECK EVREY TIME THE ARRAY OR ENTITY CHANGE\r\n    useEffect(() => {\r\n        checkArr(entity._id)\r\n    }, [entity, arr])\r\n\r\n    return isInArr\r\n}","// MODULES\r\nimport { FaGrinHearts } from 'react-icons/fa'\r\n\r\n// SERVICES\r\nimport { useCheckInArr } from '../services/custom-hooks';\r\n\r\n\r\nexport const MoviesPrev = ({ movie, onSetMovie, favMovies }) => {\r\n    // CHECK IF THE MOVIE IS IN FAVORITES\r\n    const isFav = useCheckInArr(movie, favMovies)\r\n\r\n    return (\r\n        // MOVIE LINE\r\n        <li\r\n            className='movie-prev'\r\n            onClick={() => onSetMovie(movie)}\r\n        >\r\n            {/* MOVIE TITLE */}\r\n            <h4 className='prev-title'>\r\n                {movie.properties.title}\r\n            </h4>\r\n            {/* FAVORITE ICON, SHOW ONLY IF THE MOVIE IS A FAVORITE */}\r\n            {isFav && <span className='prev-fav'><FaGrinHearts /></span>}\r\n        </li>\r\n    )\r\n}\r\n","// MODULES\r\nimport { useState } from \"react\"\r\n\r\n// COMPONENTS\r\nimport { MoviesPrev } from \"./MoviesPrev\"\r\n\r\n\r\nexport const MoviesList = ({ movies, onSetMovie, favMovies }) => {\r\n    // SET LEFT POSITION RATE FOR MOBILE VIEW\r\n    const [rate, setRate] = useState(-220)\r\n\r\n    return (\r\n        // LIST CONTAINER\r\n        <ul\r\n            className='movie-list'\r\n            style={{ left: `${rate}px` }}\r\n        >\r\n            {/* MOVIES LIST */}\r\n            {movies.map(movie =>\r\n                <MoviesPrev\r\n                    key={movie._id}\r\n                    movie={movie}\r\n                    onSetMovie={onSetMovie}\r\n                    favMovies={favMovies}\r\n                />\r\n            )}\r\n\r\n            {/* SLIDE BTN FOR MOBILES */}\r\n            {rate === 0 ?\r\n                // IF MENU IS OPEN\r\n                <button className='slide-btn' onClick={() => setRate(-220)}>\r\n                    <span className='slide-btn-txt'>Close</span>\r\n                    {'<'}\r\n                    <span className='slide-btn-txt'>Menu</span>\r\n                </button>\r\n                :\r\n                // IF MENU IS CLOSE\r\n                <button className='slide-btn' onClick={() => setRate(0)}>\r\n                    <span className='slide-btn-txt'>Choose</span>\r\n                    {'>'}\r\n                    <span className='slide-btn-txt'>Movie</span>\r\n                </button>}\r\n        </ul>\r\n    )\r\n}","import { useCheckInArr } from '../services/custom-hooks';\r\nimport { FaHeart, FaHeartBroken, FaTimes } from 'react-icons/fa'\r\n\r\n\r\n\r\nexport const MovieDetails = ({ movie, onSetMovie, onUpdateFavs, favMovies }) => {\r\n    const { title, opening_crawl, release_date, director } = movie.properties\r\n\r\n    // CHECK IF THE MOVIE IS IN FAVORITES\r\n    const isFav = useCheckInArr(movie, favMovies)\r\n\r\n    return (\r\n        // ----- MOVIE DETAILS CONTAINER ----- \r\n        <section className='movie-details'>\r\n\r\n            {/* --- TITLE --- */}\r\n            <h3 className='details-title'>{title}</h3>\r\n\r\n            {/* --- ABSTRACT --- */}\r\n            <p className='details-abstract'>{opening_crawl}</p>\r\n\r\n            {/* --- DIRECTOR --- */}\r\n            <p className='details-release'><span className='details-sub-title'>Director:  </span>{director}</p>\r\n\r\n            {/* --- RELEASE DATE --- */}\r\n            <p className='details-release'><span className='details-sub-title'>Released at:  </span>{release_date.split(\"-\").reverse().join(\"/\")}</p>\r\n\r\n            {/* --- BTNS CONTAINER --- */}\r\n            <div className='details-actions'>\r\n                {/* FAVORITE BTN */}\r\n                {isFav ?\r\n                    // MOVIE IN FAVORITES\r\n                    <button\r\n                        className='primary-btn dark'\r\n                        onClick={() => onUpdateFavs(movie, isFav)}\r\n                    > <FaHeartBroken /></button>\r\n                    :\r\n                    // MOVIE NOT IN FAVORITES\r\n                    <button\r\n                        className='primary-btn dark'\r\n                        onClick={() => onUpdateFavs(movie, isFav)}\r\n                    ><FaHeart /> </button>\r\n                }\r\n\r\n                {/* --- CLOSE DETAILS BTN --- */}\r\n                <button\r\n                    className='primary-btn dark'\r\n                    onClick={() => onSetMovie(null)}\r\n                >\r\n                    <FaTimes />\r\n                </button>\r\n            </div>\r\n        </section>\r\n    )\r\n}","\r\n\r\nexport const Loader = ({ txt }) => {\r\n\r\n    return (\r\n        <div className=\"lds-spinner\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <span>{txt}</span>\r\n        </div>\r\n    )\r\n}","// MODULES\r\nimport { useState, useEffect } from \"react\"\r\n\r\n\r\nexport const SlideShow = () => {\r\n    // ARRAY OF IMAGES TO DISPLAY\r\n    const images = [\r\n        'https://wallpaperaccess.com/full/2101913.jpg',\r\n        'https://cdn.wallpapersafari.com/89/19/vAF5M2.jpg',\r\n        'https://i.redd.it/m182f70smoe51.png',\r\n        'https://wallpaper.dog/large/5482636.jpg',\r\n        'https://www.nawpic.com/media/2020/star-wars-nawpic-23.jpg',\r\n        'https://images4.alphacoders.com/653/thumb-1920-653613.jpg'\r\n    ];\r\n\r\n    // CURRENT IMAGE DISPLAYED\r\n    const [image, setImage] = useState(images[0]);\r\n\r\n    // GET THE NEXT IMAGE IN THE ARRAY\r\n    const getNextImg = () => {\r\n        setImage(prevImage => {\r\n            let idx = images.findIndex(img => img === prevImage);\r\n            return (idx === -1 || idx === images.length - 1) ?\r\n                images[0] : images[idx + 1];\r\n        })\r\n    }\r\n\r\n    // ON MOUNT START 5-SEC INTERVAL TO SLIDE TO THE NEXT IMAGE\r\n    useEffect(() => {\r\n        const imageInterval = setInterval(() => {\r\n            getNextImg()\r\n        }, 5000)\r\n        // REMOVE THE INTERVAL ON DISMOUNT\r\n        return () => clearInterval(imageInterval);\r\n    })\r\n\r\n    return (\r\n        // SLIDER CONTAINER\r\n        <section className='slide-show' onClick={() => getNextImg()}>\r\n            <img src={image} alt=\"STAR-WARS\" />\r\n        </section>\r\n    )\r\n}","// LOCAL STORAGE SERVICE THAT RETURNS A PROMISE, ACT AS A SERVER. FOR FRONTEND PROJECTS ONLY\r\n\r\n\r\nexport const asyncStorageService = {\r\n    post,\r\n    put,\r\n    remove,\r\n    query,\r\n    getEntities\r\n}\r\n\r\n\r\n\r\n// ----------------------- PRODUCTS CRUDL -----------------------\r\n//  ----- LIST -----\r\nasync function query(entityType) {\r\n    const entities = JSON.parse(localStorage.getItem(entityType))\r\n    _save(entityType, entities);\r\n    return Promise.resolve(entities)\r\n}\r\n\r\n\r\n//  ----- CREATE ---\r\nasync function post(entityType, newEntity) {\r\n    newEntity._id = _makeId();\r\n    const entities = await query(entityType)\r\n    entities.push(newEntity);\r\n    _save(entityType, entities);\r\n    return Promise.resolve(newEntity);\r\n}\r\n\r\n// ----- GET ENTITIES -----\r\nasync function getEntities() {\r\n    try {\r\n        const res = await fetch(\"https://www.swapi.tech/api/films/\");\r\n        const data = await res.json();\r\n        return data.result;\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\n//  ----- UPDATE -----\r\nasync function put(entityType, updatedEntity) {\r\n    const entities = await query(entityType) || [];\r\n    entities.push(updatedEntity)\r\n    _save(entityType, entities);\r\n    return Promise.resolve(entities);\r\n}\r\n\r\n//  ----- DELETE -----\r\nasync function remove(entityType, entityId) {\r\n    const entities = await query(entityType)\r\n    if (!entities) return\r\n    const updatedEntitys = entities.filter(entity => entity._id !== entityId)\r\n    _save(entityType, updatedEntitys);\r\n    return Promise.resolve(updatedEntitys);\r\n}\r\n\r\n\r\n\r\n// ------------ INNER FUNCTIONS  ------------ \r\n\r\n// ----- SAVE TO STORAGE -----\r\nfunction _save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities));\r\n}\r\n\r\n// ----- CREAT NEW ID -----\r\nfunction _makeId(length = 7) {\r\n    var text = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return text;\r\n}\r\n\r\n\r\n","\r\nimport { asyncStorageService } from './async-storage-service.js';\r\n\r\n\r\nconst KEY1 = 'movies';\r\nconst KEY2 = 'favs';\r\n\r\n\r\nexport const movieService = {\r\n    query,\r\n    queryFavs,\r\n    removeFav,\r\n    addFav\r\n}\r\n\r\n// ---------------------- CRUDL -----------------------\r\n\r\n// ----- GET MOVIES -----\r\nasync function query() {\r\n    return await asyncStorageService.query(KEY1) || await asyncStorageService.getEntities()\r\n}\r\n\r\n// ----- GET FAVS -----\r\nasync function queryFavs() {\r\n    return asyncStorageService.query(KEY2)\r\n}\r\n\r\n// ----- REMOVE FROM FAVORITES -----\r\nasync function removeFav(movieId) {\r\n    return await asyncStorageService.remove(KEY2, movieId);\r\n}\r\n\r\n//  --- ADD TO FAVORITES ---\r\nasync function addFav(movie) {\r\n    return await asyncStorageService.put(KEY2, movie)\r\n}\r\n\r\n\r\n","// MODULES\nimport { useState, useEffect } from 'react';\n\n// COMPONENTS & SERVICES\nimport { MoviesList } from './cmps/MoviesList'\nimport { MovieDetails } from './cmps/MovieDetails'\nimport { Loader } from './cmps/Loader'\nimport { SlideShow } from './cmps/SlideShow'\nimport { movieService } from './services/movie-service'\n\n\nexport const App = () => {\n  // APP SERVICES\n  const { removeFav, addFav, queryFavs, query } = movieService\n\n  // --- MOVIES ---\n  const [movies, setMovies] = useState([])\n\n\n  // --- FAVORITE MOVIES ---\n  const [favMovies, setFavMovies] = useState([])\n\n  // UPDATE FAVORITES MOVIES\n  const updateFavs = async (movie, isFav) => {\n    try {\n      const updatedFavs = isFav ? await removeFav(movie._id) : await addFav(movie)\n      setFavMovies([...updatedFavs])\n    } catch (err) {\n      console.error('Had a problem:\\n', err)\n    }\n  }\n\n  // GET MOVIES AND FAVORITES FROM LOCAL STORAGE ON MOUNT\n  const init = async () => {\n    try {\n      setMovies(await query())\n      setFavMovies(await queryFavs())\n    } catch (err) {\n      console.error('Had a problem:\\n', err)\n    }\n  }\n\n  useEffect(() => {\n    init()\n  }, [])\n\n  // --- CHOSEN MOVIE --- \n  const [movie, setMovie] = useState(null)\n\n  // IF THERE IS NO MOVIES SHOW LOADER\n  if (!movies) return <Loader txt='Loading' />\n  return (\n    // CONTAINER FOR STYLING\n    <div className=\"container\">\n\n      {/* MAIN APP CONTAINER */}\n      <main className=\"app-container\">\n\n        {/* APP TITLE */}\n        <h1 className='app-header'>In a galaxy far far away...</h1>\n\n        {/* MOVIES TOC (TABLE OF CONTENT) */}\n        <MoviesList\n          movies={movies}\n          favMovies={favMovies}\n          onSetMovie={setMovie}\n        />\n\n        {/* CHOSEN MOVIE */}\n        {movie ?\n          // MOVIE SELECTED\n          <MovieDetails\n            movie={movie}\n            onSetMovie={setMovie}\n            onUpdateFavs={updateFavs}\n            favMovies={favMovies}\n          /> :\n          // IF NO MOVIE IS SELECTED SHOW SLIDESHOW\n          <SlideShow />\n        }\n\n      </main>\n    </div>\n  );\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/main.scss';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}